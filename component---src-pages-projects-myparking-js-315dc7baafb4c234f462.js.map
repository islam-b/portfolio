{"version":3,"sources":["webpack://v4/./src/pages/projects/myparking.js"],"names":["StyledTableContainer","styled","theme","mixins","flexCenter","location","projects","data","allMarkdownRemark","edges","revealContainer","useRef","prefersReducedMotion","usePrefersReducedMotion","useEffect","sr","current","srConfig","title","ref","className","style","length","map","i","node","frontmatter","date","github","external","ios","android","tech","company","key","Date","getFullYear","item","href","name"],"mappings":"mLAWMA,EAAuBC,oBAAH,2EAAGA,CAAH,grCA2GZ,qBAAGC,MAAkBC,OAAOC,UAA5B,IAmId,UArHsB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACfC,EADoC,EAAXC,KACTC,kBAAkBC,MAElCC,GAAkBC,YAAO,MACzBC,GAAuBC,UAW7B,OATAC,gBAAU,WACFF,GAIJG,WAAUL,EAAgBM,SAASC,gBACtC,GAAE,IAIC,gBAAC,KAAD,CAAQZ,SAAUA,GACd,gBAAC,IAAD,CAAQa,MAAM,aAEd,wBAAMC,IAAKT,GACP,8BACI,sBAAIU,UAAU,eAAd,aAIJ,uBAAKC,MAAO,CAAC,aAAa,SACtB,2aAOJ,gBAACrB,EAAD,KACI,6BACI,6BACI,0BACI,kCACA,mCACA,sBAAIoB,UAAU,kBAAd,WACA,sBAAIA,UAAU,kBAAd,cACA,oCAGR,6BACKd,EAASgB,OAAS,GACfhB,EAASiB,KAAI,WAAWC,GAAO,IAC3B,EAD0B,EAAdC,KAUHC,YARLC,EADJ,EACIA,KACAC,EAFJ,EAEIA,OACAC,EAHJ,EAGIA,SACAC,EAJJ,EAIIA,IACAC,EALJ,EAKIA,QACAb,EANJ,EAMIA,MACAc,EAPJ,EAOIA,KACAC,EARJ,EAQIA,QAEJ,OACI,sBAAIC,IAAKV,GACL,sBAAIJ,UAAU,iBAAd,GAAkC,IAAIe,KAAKR,GAAMS,eAEjD,sBAAIhB,UAAU,SAASF,GAEvB,sBAAIE,UAAU,0BACTa,EAAU,4BAAOA,GAAkB,kCAGxC,sBAAIb,UAAU,wBACTY,aAAA,EAAAA,EAAMV,QAAS,GACZU,EAAKT,KAAI,SAACc,EAAMb,GAAP,OACL,wBAAMU,IAAKV,GACNa,EACA,GACAb,IAAMQ,EAAKV,OAAS,GAAK,wBAAMF,UAAU,aAAhB,KAJzB,KASjB,sBAAIA,UAAU,SACV,2BACKS,GACG,qBAAGS,KAAMT,EAAU,aAAW,iBAC1B,gBAAC,KAAD,CAAMU,KAAK,cAGlBX,GACG,qBAAGU,KAAMV,EAAQ,aAAW,eACxB,gBAAC,KAAD,CAAMW,KAAK,YAGlBT,GACG,qBAAGQ,KAAMR,EAAK,aAAW,wBACrB,gBAAC,KAAD,CAAMS,KAAK,cAGlBR,GACG,qBAAGO,KAAMP,EAAS,aAAW,0BACzB,gBAAC,KAAD,CAAMQ,KAAK,iBAOtC,QAOhC,C","file":"component---src-pages-projects-myparking-js-315dc7baafb4c234f462.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { srConfig } from '@config';\nimport sr from '@utils/sr';\nimport { Layout } from '@components';\nimport { Icon } from '@components/icons';\nimport { usePrefersReducedMotion } from '@hooks';\n\nconst StyledTableContainer = styled.div`\n  margin: 100px -20px;\n\n  @media (max-width: 768px) {\n    margin: 50px -10px;\n  }\n\n  table {\n    width: 100%;\n    border-collapse: collapse;\n\n    .hide-on-mobile {\n      @media (max-width: 768px) {\n        display: none;\n      }\n    }\n\n    tbody tr {\n      &:hover,\n      &:focus {\n        background-color: var(--light-navy);\n      }\n    }\n\n    th,\n    td {\n      padding: 10px;\n      text-align: left;\n\n      &:first-child {\n        padding-left: 20px;\n\n        @media (max-width: 768px) {\n          padding-left: 10px;\n        }\n      }\n      &:last-child {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n        }\n      }\n\n      svg {\n        width: 20px;\n        height: 20px;\n      }\n    }\n\n    tr {\n      cursor: default;\n\n      td:first-child {\n        border-top-left-radius: var(--border-radius);\n        border-bottom-left-radius: var(--border-radius);\n      }\n      td:last-child {\n        border-top-right-radius: var(--border-radius);\n        border-bottom-right-radius: var(--border-radius);\n      }\n    }\n\n    td {\n      &.year {\n        padding-right: 20px;\n\n        @media (max-width: 768px) {\n          padding-right: 10px;\n          font-size: var(--fz-sm);\n        }\n      }\n\n      &.title {\n        padding-top: 15px;\n        padding-right: 20px;\n        color: var(--lightest-slate);\n        font-size: var(--fz-xl);\n        font-weight: 600;\n        line-height: 1.25;\n      }\n\n      &.company {\n        font-size: var(--fz-lg);\n        white-space: nowrap;\n      }\n\n      &.tech {\n        font-size: var(--fz-xxs);\n        font-family: var(--font-mono);\n        line-height: 1.5;\n        .separator {\n          margin: 0 5px;\n        }\n        span {\n          display: inline-block;\n        }\n      }\n\n      &.links {\n        min-width: 100px;\n\n        div {\n          display: flex;\n          align-items: center;\n\n          a {\n            ${({ theme }) => theme.mixins.flexCenter};\n            flex-shrink: 0;\n          }\n\n          a + a {\n            margin-left: 10px;\n          }\n        }\n      }\n    }\n  }\n`;\n\n\nconst MyParkingPage = ({ location, data }) => {\n    const projects = data.allMarkdownRemark.edges;\n\n    const revealContainer = useRef(null);\n    const prefersReducedMotion = usePrefersReducedMotion();\n\n    useEffect(() => {\n        if (prefersReducedMotion) {\n            return;\n        }\n\n        sr.reveal(revealContainer.current, srConfig());\n    }, []);\n\n\n    return (\n        <Layout location={location}>\n            <Helmet title=\"MyToyota\" />\n\n            <main ref={revealContainer}>\n                <header>\n                    <h1 className=\"big-heading\">MyToyota</h1>\n                    {/* <p className=\"subtitle\">Toyota Algerie </p> */}\n                </header>\n\n                <div style={{\"margin-top\":\"40px\"}}>\n                    <p>\n                        A minimal, dark blue theme for VS Code, Sublime Text, Atom, iTerm, and more. Available on [Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=brittanychiang.halcyon-vscode), [Package Control](https://packagecontrol.io/packages/Halcyon%20Theme), [Atom Package Manager](https://atom.io/themes/halcyon-syntax), and [npm](https://www.npmjs.com/package/hyper-halcyon-theme).\n                    </p>\n                </div>\n\n\n\n                <StyledTableContainer >\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Year</th>\n                                <th>Title</th>\n                                <th className=\"hide-on-mobile\">Made at</th>\n                                <th className=\"hide-on-mobile\">Built with</th>\n                                <th>Link</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {projects.length > 0 &&\n                                projects.map(({ node }, i) => {\n                                    const {\n                                        date,\n                                        github,\n                                        external,\n                                        ios,\n                                        android,\n                                        title,\n                                        tech,\n                                        company,\n                                    } = node.frontmatter;\n                                    return (\n                                        <tr key={i} >\n                                            <td className=\"overline year\">{`${new Date(date).getFullYear()}`}</td>\n\n                                            <td className=\"title\">{title}</td>\n\n                                            <td className=\"company hide-on-mobile\">\n                                                {company ? <span>{company}</span> : <span>â€”</span>}\n                                            </td>\n\n                                            <td className=\"tech hide-on-mobile\">\n                                                {tech?.length > 0 &&\n                                                    tech.map((item, i) => (\n                                                        <span key={i}>\n                                                            {item}\n                                                            {''}\n                                                            {i !== tech.length - 1 && <span className=\"separator\">&middot;</span>}\n                                                        </span>\n                                                    ))}\n                                            </td>\n\n                                            <td className=\"links\">\n                                                <div>\n                                                    {external && (\n                                                        <a href={external} aria-label=\"External Link\">\n                                                            <Icon name=\"External\" />\n                                                        </a>\n                                                    )}\n                                                    {github && (\n                                                        <a href={github} aria-label=\"GitHub Link\">\n                                                            <Icon name=\"GitHub\" />\n                                                        </a>\n                                                    )}\n                                                    {ios && (\n                                                        <a href={ios} aria-label=\"Apple App Store Link\">\n                                                            <Icon name=\"AppStore\" />\n                                                        </a>\n                                                    )}\n                                                    {android && (\n                                                        <a href={android} aria-label=\"Google Play Store Link\">\n                                                            <Icon name=\"PlayStore\" />\n                                                        </a>\n                                                    )}\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    );\n                                })}\n                        </tbody>\n                    </table>\n                </StyledTableContainer>\n            </main>\n        </Layout>\n    );\n};\nMyParkingPage.propTypes = {\n    location: PropTypes.object.isRequired,\n    data: PropTypes.object.isRequired,\n};\n\nexport default MyParkingPage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/projects/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            title\n            tech\n            github\n            external\n            ios\n            android\n            company\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}